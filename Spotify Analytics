# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Last, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
) ;

#Then I inserted the Spotify Data .csv into the table.


#Next, I explored the data using the following SQL and answered some questions.
SELECT * FROM BIT_DB.Spotifydata;


#1. Select the Top 10 best songs with artist to dance to from the list.
SELECT track_name , artist_name, danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 10;


#2. Order the songs list by popularity.
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC;


#3. Which tracks have a popularity rate of over 85 and energy greater than 0.75?
SELECT track_name, popularity, energy
FROM BIT_DB.Spotifydata
WHERE popularity > 85 and energy > .75
GROUP BY track_name;


#4. What artists made the songs list the most and how many times?
SELECT DISTINCT artist_name, COUNT(artist_name) as numsongs_onlist
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY numsongs_onlist DESC
LIMIT 3;

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
) ;

#Then I inserted the Spotify Data .csv into the table.


#Next, I explored the data using the following SQL and answered some questions.
SELECT * FROM BIT_DB.Spotifydata;


#1. Select the Top 10 best songs with artist to dance to from the list.
SELECT track_name , artist_name, danceability
FROM BIT_DB.Spotifydata
ORDER BY danceability DESC
LIMIT 10;


#2. Order the songs list by popularity.
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC;


#3. Which tracks have a popularity rate of over 85 and energy greater than 0.75?
SELECT track_name, popularity, energy
FROM BIT_DB.Spotifydata
WHERE popularity > 85 and energy > .75
GROUP BY track_name;


#4. What artists made the songs list the most and how many times?
SELECT DISTINCT artist_name, COUNT(artist_name) as numsongs_onlist
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY numsongs_onlist DESC
LIMIT 3;
